// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace uFrameECSExample {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using uFrame.ECS.Components;
    using uFrame.Json;
    using UniRx;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(15)]
    [uFrame.Attributes.uFrameIdentifier("4169dcad-6603-4cbc-8af3-44e8a9382abb")]
    public partial class WavesGame : uFrame.ECS.Components.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private Int32 _HazardCount;
        
        [UnityEngine.SerializeField()]
        private Single _SpawnWait;
        
        [UnityEngine.SerializeField()]
        private Int32 _Score;
        
        [UnityEngine.SerializeField()]
        private Vector3 _SpawnValues;
        
        [UnityEngine.SerializeField()]
        private String _EnemyPoolName;
        
        private Subject<PropertyChangedEvent<Int32>> _HazardCountObservable;
        
        private PropertyChangedEvent<Int32> _HazardCountEvent;
        
        private Subject<PropertyChangedEvent<Single>> _SpawnWaitObservable;
        
        private PropertyChangedEvent<Single> _SpawnWaitEvent;
        
        private Subject<PropertyChangedEvent<Int32>> _ScoreObservable;
        
        private PropertyChangedEvent<Int32> _ScoreEvent;
        
        private Subject<PropertyChangedEvent<Vector3>> _SpawnValuesObservable;
        
        private PropertyChangedEvent<Vector3> _SpawnValuesEvent;
        
        private Subject<PropertyChangedEvent<String>> _EnemyPoolNameObservable;
        
        private PropertyChangedEvent<String> _EnemyPoolNameEvent;
        
        public override int ComponentId {
            get {
                return 15;
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> HazardCountObservable {
            get {
                return _HazardCountObservable ?? (_HazardCountObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Single>> SpawnWaitObservable {
            get {
                return _SpawnWaitObservable ?? (_SpawnWaitObservable = new Subject<PropertyChangedEvent<Single>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> ScoreObservable {
            get {
                return _ScoreObservable ?? (_ScoreObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Vector3>> SpawnValuesObservable {
            get {
                return _SpawnValuesObservable ?? (_SpawnValuesObservable = new Subject<PropertyChangedEvent<Vector3>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<String>> EnemyPoolNameObservable {
            get {
                return _EnemyPoolNameObservable ?? (_EnemyPoolNameObservable = new Subject<PropertyChangedEvent<String>>());
            }
        }
        
        public Int32 HazardCount {
            get {
                return _HazardCount;
            }
            set {
                SetHazardCount(value);
            }
        }
        
        public Single SpawnWait {
            get {
                return _SpawnWait;
            }
            set {
                SetSpawnWait(value);
            }
        }
        
        public Int32 Score {
            get {
                return _Score;
            }
            set {
                SetScore(value);
            }
        }
        
        public Vector3 SpawnValues {
            get {
                return _SpawnValues;
            }
            set {
                SetSpawnValues(value);
            }
        }
        
        public String EnemyPoolName {
            get {
                return _EnemyPoolName;
            }
            set {
                SetEnemyPoolName(value);
            }
        }
        
        public virtual void SetHazardCount(Int32 value) {
            SetProperty(ref _HazardCount, value, ref _HazardCountEvent, _HazardCountObservable);
        }
        
        public virtual void SetSpawnWait(Single value) {
            SetProperty(ref _SpawnWait, value, ref _SpawnWaitEvent, _SpawnWaitObservable);
        }
        
        public virtual void SetScore(Int32 value) {
            SetProperty(ref _Score, value, ref _ScoreEvent, _ScoreObservable);
        }
        
        public virtual void SetSpawnValues(Vector3 value) {
            SetProperty(ref _SpawnValues, value, ref _SpawnValuesEvent, _SpawnValuesObservable);
        }
        
        public virtual void SetEnemyPoolName(String value) {
            SetProperty(ref _EnemyPoolName, value, ref _EnemyPoolNameEvent, _EnemyPoolNameObservable);
        }
    }
}
