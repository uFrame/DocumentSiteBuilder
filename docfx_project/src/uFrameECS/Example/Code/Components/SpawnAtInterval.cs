// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace uFrameECSExample {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using uFrame.ECS.Components;
    using uFrame.Json;
    using UniRx;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(16)]
    [uFrame.Attributes.uFrameIdentifier("ddb2ab3c-2d18-43dc-9749-d733aed52c3a")]
    public partial class SpawnAtInterval : uFrame.ECS.Components.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private Transform _Parent;
        
        [UnityEngine.SerializeField()]
        private GameObject _Prefab;
        
        [UnityEngine.SerializeField()]
        private Single _Speed;
        
        private Subject<PropertyChangedEvent<Transform>> _ParentObservable;
        
        private PropertyChangedEvent<Transform> _ParentEvent;
        
        private Subject<PropertyChangedEvent<GameObject>> _PrefabObservable;
        
        private PropertyChangedEvent<GameObject> _PrefabEvent;
        
        private Subject<PropertyChangedEvent<Single>> _SpeedObservable;
        
        private PropertyChangedEvent<Single> _SpeedEvent;
        
        public override int ComponentId {
            get {
                return 16;
            }
        }
        
        public IObservable<PropertyChangedEvent<Transform>> ParentObservable {
            get {
                return _ParentObservable ?? (_ParentObservable = new Subject<PropertyChangedEvent<Transform>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<GameObject>> PrefabObservable {
            get {
                return _PrefabObservable ?? (_PrefabObservable = new Subject<PropertyChangedEvent<GameObject>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Single>> SpeedObservable {
            get {
                return _SpeedObservable ?? (_SpeedObservable = new Subject<PropertyChangedEvent<Single>>());
            }
        }
        
        public Transform Parent {
            get {
                return _Parent;
            }
            set {
                SetParent(value);
            }
        }
        
        public GameObject Prefab {
            get {
                return _Prefab;
            }
            set {
                SetPrefab(value);
            }
        }
        
        public Single Speed {
            get {
                return _Speed;
            }
            set {
                SetSpeed(value);
            }
        }
        
        public virtual void SetParent(Transform value) {
            SetProperty(ref _Parent, value, ref _ParentEvent, _ParentObservable);
        }
        
        public virtual void SetPrefab(GameObject value) {
            SetProperty(ref _Prefab, value, ref _PrefabEvent, _PrefabObservable);
        }
        
        public virtual void SetSpeed(Single value) {
            SetProperty(ref _Speed, value, ref _SpeedEvent, _SpeedObservable);
        }
    }
}
